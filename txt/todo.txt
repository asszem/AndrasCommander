This list has elements that are not related to a specific part of the source code and requred for feature completion

Now
TODO - Search Mode Subtasks
            - Handle backspace while in search mode
    - Jump to next/prev search result
        - Calculate only when necessary - find in the process flow when the calulation should take place
        - Create a pointer that shows the current highlighted search match
        - Move the pointer to the next/prev match
        - Get the index of the next result
        - Be able to handle JList changes (reordering, manual cursor movements)
    - Handle exiting from search mode
        - Handle ESC to quit without execution
        - Remove previous results form FileItems
        - Remove search display in JPanel
        - Handle empty search
    - Documentation
        - Write process summary - which class knows what, which class does what
        - Update UML when final version is reached

    - Which Class Knows What
     AndrasCommander
        - Knows the mode (Normal, insert, etc)
     FilePanel
        - Generates the JList
        - Knows the current hightlighted index of JList
        - Jlist order could be changed by reordering, renaming, refreshing
        - Displays the JList
            - Highlights the matching titles in Search mode, but doesn't execute the search
     CommandImplementation
        - Executes the search when search term is received from KeyBindingparser
            - Calls FolderContent to do the actual search
            - Calls FilePanel to regenerate JList, highlighting results
        - Knows the search term (if multiple FilePanels exist, then each might have a different search term)
            - Sends the search term to FolderContent when calling the execute search
     FolderContent
        - Knows the files in the folder
        - Knows the highlighted file
        - Knows which files matched the searchTerm (only after search is executed)
        - Can set the Highlighted file if it contains the Displayed Title from FilePanel
     KeyBindingParser
        - Knows the list of last pressed keys before converting them to commands
        - Converts the keys to commands if a match was found
        - Listens to start, end, quit and next/prev search commands
        - Sets the mode to Search, Normal, Insert, etc

TODO - Highlight bacground of matched characters only
TODO - Handle back button while in search mode to erase previous result
TODO - Update UML after basic search was implemented - The standard sequence diagram as well

Fix
TODO - Handle situation when the last history folder is not found because it was renamed - add general error protection for non-existing folder
TODO - Fix going back ping-ponging between last two directory
    - When gb is pressed, it should go back in history, but the
    a
    b
    c
    d -> gb pressed here
    c -> gb pressed here
    b -> it should go back to b, instead of c.
    - Also a gf - going forward (and not goto file) command should be implemented to navigate forwards in History

Tasks
TODO - Refactor repaint and set visible redundant calls (for example, KeyInfoPanel and FilePanel)
TODO - refactor naming and methods to make more clear when is the UI redrawn
TODO - Fix and setup a Layout Manager to the main Frame so a borderlayout on KeyInfoPanel wont mess up the entire GUI
TODO - Set filapanel size to have always the title bar visible
TODO - Edge case handling - folders without files, full empty folders, only files, top folder reached, etc

Refactor
TODO - Refactor GUI code to use class inheritance
    - Read books about inheritance
    - Key Listener package
    - File Panel package
TODO - Refactor CommandImplementations to avoid long and ugly chain of commands
    - Find out why passing the objects in the constructor to a variable did not reflected the changes on that object
TODO - Refactor separation of files and folders
    - Rethink how the FileList class handles file data and metadata
    - When a list is created, the files and folders should be separated visually
TODO - Refactor remapping cursor keys
    - remove hardcoded keys
    - find an alternative solution to using Robot

Features
TODO - Improve File Open method in KeyBindingParser
    - Do not open Directories in file
    - Currently using Java AWT Desktop
    - Will open every type of file

UI
TODO - Implement GUI using JavaFX

DONE
